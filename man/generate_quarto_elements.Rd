% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dashboard.R
\name{generate_quarto_elements}
\alias{generate_quarto_elements}
\title{Generate Quarto Output for a List of Plots}
\usage{
generate_quarto_elements(list_of_plots, plots_per_page = 2)
}
\arguments{
\item{list_of_plots}{A list where each element is a plot object (e.g., \code{highchart}).}

\item{plots_per_page}{An integer specifying how many plots should ideally be
grouped per "page" or section. This parameter is used to
calculate \code{num_pages} but is not directly used in the active
code's plotting logic (which plots one per "page").
Defaults to 2.}
}
\value{
This function does not return a value explicitly but prints Markdown/HTML
to the console via \code{cat}, intended for inclusion in a Quarto document.
}
\description{
This function takes a list of plot objects and generates Quarto/Markdown
output to display them. Currently, it iterates through the plots
and prints each one under a '### Page X' heading.
The commented-out section suggests a previous implementation aimed at
arranging plots in a table with a fixed number of plots per page/row.
}
\details{
The function first calculates the total number of plots and the potential
number of "pages" based on \code{plots_per_page}. These are stored in global
variables \code{num_plots} and \code{num_pages}.
The active part of the function then iterates through \code{list_of_plots} using \code{purrr::walk}.
For each plot:
1. A counter \code{page} (global) is incremented.
2. A Markdown heading "### \code{page}" is printed to the console using \code{cat}.
3. The plot is converted to HTML using \code{plot_to_html} and then printed using \code{cat}.
This will directly output the Markdown/HTML to be rendered by Quarto.

\if{html}{\out{<div class="sourceCode">}}\preformatted{     The commented-out code block shows an attempt to create an HTML table
     to arrange plots side-by-side, which is currently not active.
}\if{html}{\out{</div>}}
}
\examples{
# Assuming plot1, plot2, plot3 are highchart objects:
# my_plots <- list(plot1, plot2, plot3)
# generate_quarto_elements(my_plots) # Will print Quarto content for each plot

Dependencies: purrr, htmltools (via plot_to_html), shiny (via plot_to_html)
              (Note: Uses global assignment `<<-` for `num_plots`, `num_pages`, and `page`)
}
