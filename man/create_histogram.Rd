% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_histogram.R
\name{create_histogram}
\alias{create_histogram}
\title{Create an Histogram}
\usage{
create_histogram(
  data,
  x_var,
  y_var = NULL,
  title = NULL,
  subtitle = NULL,
  x_label = NULL,
  y_label = NULL,
  histogram_type = c("count", "percent"),
  tooltip_prefix = "",
  tooltip_suffix = "",
  x_tooltip_suffix = "",
  bins = NULL,
  bin_breaks = NULL,
  bin_labels = NULL,
  include_na = FALSE,
  na_label = "(Missing)",
  color = NULL,
  x_map_values = NULL,
  x_order = NULL
)
}
\arguments{
\item{data}{A data frame containing the variable to plot.}

\item{x_var}{String. Name of the numeric column to histogram.}

\item{y_var}{Optional string. Name of a pre-computed count column.
If supplied, the function skips counting and uses this column as y.}

\item{title}{Optional string. Main chart title.}

\item{subtitle}{Optional string. Chart subtitle.}

\item{x_label}{Optional string. X-axis label. Defaults to \code{x_var}.}

\item{y_label}{Optional string. Y-axis label. Defaults to "Count" or
"Percentage".}

\item{histogram_type}{One of "count" or "percent". Default "count".}

\item{tooltip_prefix}{Optional string prepended in the tooltip.}

\item{tooltip_suffix}{Optional string appended in the tooltip.}

\item{x_tooltip_suffix}{Optional string appended to x value in tooltip.}

\item{bins}{Optional integer. Number of bins to compute via \code{hist()}.}

\item{bin_breaks}{Optional numeric vector of cut points.}

\item{bin_labels}{Optional character vector of labels for the bins.
Must be length \code{length(breaks)-1}.}

\item{include_na}{Logical. If TRUE, treats NA as explicit category.}

\item{na_label}{Optional string. Custom label for NA values. Defaults to "(Missing)".}

\item{color}{Optional string or vector of colors for the bars.}

\item{x_map_values}{Optional named list to recode raw \code{x_var} values
before binning.}

\item{x_order}{Optional character vector to order the factor levels
of the binned variable.}
}
\value{
A \code{highcharter} histogram (column) plot object.
}
\description{
This function creates a histogram for survey data. It handles raw
(unaggregated) data, counting the occurences of categories, supporting
ordered factors, allowing numerical x-axis variables to be binned
into custom groups, and enables renaming of categorical values for
display. It can also handle SPSS (.sav) columns automatically.
}
\details{
This function performs the following steps:
\enumerate{
\item \strong{Input validation:} Checks that \code{data} is a data frame and
\code{x_var} (and \code{y_var} if given) exist.
\item \strong{Haven-labelled handling:} If \code{x_var} is of class
\code{"haven_labelled"}, converts it to numeric.
\item \strong{Value mapping:} If \code{x_map_values} is provided, recodes raw values
before any binning.
\item \strong{Binning:}
\itemize{
\item If \code{bins} is set (and \code{bin_breaks} is \code{NULL}), computes breaks via
\code{hist()}.
\item If \code{bin_breaks} is provided, cuts \code{x_var} into categories, using
\code{bin_labels} if supplied.
\item Otherwise uses the raw \code{x_var} values.
}
\item \strong{Factor and NA handling:} Converts the plotting variable to a factor;
if \code{include_na = TRUE}, adds an explicit "(NA)" level.
Applies \code{x_order} if given.
\item \strong{Aggregation:}
\itemize{
\item If \code{y_var} is \code{NULL}, counts occurrences of each factor level.
\item Otherwise renames \code{y_var} to \code{n} and skips counting.
}
\item \strong{Chart construction:} Builds a \code{highcharter} column chart of \code{n}
vs. the factor levels.
\item \strong{Customization:}
\itemize{
\item Applies \code{title}, \code{subtitle}, axis labels.
\item Sets stacking mode (for percent vs. count), data labels format.
\item Defines a JS \code{tooltip.formatter} using \code{tooltip_prefix},
\code{tooltip_suffix}, and \code{x_tooltip_suffix}.
\item Applies custom \code{color} if provided.
}
}
}
\examples{

We will work with data from the GSS. The GSS dataset (`gssr`) is a dependency of
our `dashboardr` package.

# Filter to recent years and select relevant variables
gss_recent <- gss_all \%>\%
  filter(year >= 2010) \%>\%
  select(age, degree, happy, sex, race, year)

# Example 1: Basic histogram of age distribution
plot1 <- create_histogram(
  data = gss_recent,
  x_var = "age",
  title = "Age Distribution in GSS Data (2010+)",
  subtitle = "General Social Survey respondents",
  x_label = "Age (years)",
  y_label = "Number of Respondents",
  bins = 15,
  color = "hotpink"
)
plot1

# Example 2: Education levels with custom mapping and ordering
# First check the unique values
# unique(gss_recent$degree) # "Lt High School", "High School", "Junior College", "Bachelor", "Graduate"

education_order <- c("Lt High School", "High School", "Junior College", "Bachelor", "Graduate")

plot2 <- create_histogram(
  data = gss_recent,
  x_var = "degree",
  title = "Educational Attainment Distribution",
  subtitle = "GSS respondents 2010-present",
  x_label = "Highest Degree Completed",
  y_label = "Count",
  histogram_type = "count",
  x_order = education_order,
  include_na = TRUE,
)
plot2

# Example 3: Happiness levels as percentages with custom labels
happiness_map <- list(
  "Very Happy" = "Very Happy!",
  "Pretty Happy" = "Pretty Happy",
  "Not Too Happy" = "Not Too Happy :|"
)

plot3 <- create_histogram(
  data = gss_recent,
  x_var = "happy",
  title = "Self-Reported Happiness Levels",
  subtitle = "Percentage distribution among GSS respondents",
  x_label = "Happiness Level",
  y_label = "Percentage of Respondents",
  histogram_type = "percent",
  x_map_values = happiness_map,
  tooltip_suffix = "\%",
  include_na = TRUE,
  na_label = "No Response",
)
plot3

# Example 4: Age binning with custom breaks and labels
age_breaks <- c(18, 30, 45, 60, 75, Inf)
age_labels <- c("18-29", "30-44", "45-59", "60-74", "75+")

plot4 <- create_histogram(
  data = gss_recent,
  x_var = "age",
  title = "Age Groups in GSS Sample",
  subtitle = "Custom age categories",
  x_label = "Age Group",
  y_label = "Number of Respondents",
  bin_breaks = age_breaks,
  bin_labels = age_labels,
  tooltip_prefix = "Count: ",
  x_tooltip_suffix = " years old",
  color = "seagreen1"
)
plot4

# Example 5: Using pre-aggregated data
# Create aggregated data first
race_counts <- gss_recent \%>\%
  count(race, name = "respondent_count") \%>\%
  filter(!is.na(race))

plot5 <- create_histogram(
  data = race_counts,
  x_var = "race",
  y_var = "respondent_count",  # Use pre-computed counts
  title = "Racial Distribution in GSS Sample",
  subtitle = "Based on pre-aggregated data",
  x_label = "Race/Ethnicity",
  y_label = "Number of Respondents",
)
plot5


}
