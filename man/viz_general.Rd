% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dashboard.R
\name{viz_general}
\alias{viz_general}
\title{Generate General Visualization (Stacked Bar Chart)}
\usage{
viz_general(vars, var_labels, categories_dat, grpvar = NULL, groups = F)
}
\arguments{
\item{vars}{A character vector of variable names to include in the visualization.}

\item{var_labels}{A character vector of labels corresponding to \code{vars}.}

\item{categories_dat}{A character vector of 3 category labels (e.g., c("High", "Medium", "Low")).
The recoding logic assumes a 1-7 scale: 5-7 maps to \code{categories_dat[1]},
4 maps to \code{categories_dat[2]}, and 1-3 maps to \code{categories_dat[3]}.}

\item{grpvar}{An optional character string specifying the name of a grouping variable
in \code{data}. If \code{NULL} (default), a general summary is produced.
If provided, \code{groups} should be \code{TRUE}.}

\item{groups}{A logical flag. If \code{FALSE} (default), a single stacked bar chart for all
variables is generated. If \code{TRUE}, separate stacked bar charts are generated
for each variable, grouped by \code{grpvar}.}
}
\value{
If \code{groups = FALSE}, returns a single \code{highchart} object.
If \code{groups = TRUE}, the function calls \code{generate_quarto_elements} which prints
HTML/Markdown to the console and does not return a plot object directly from \code{viz_general}.
}
\description{
This function creates a stacked bar chart showing the distribution
of responses for a set of variables. Responses are typically
categorized (e.g., into low, medium, high based on a Likert scale).
The function can operate in two modes: general summary or grouped summary.
}
\details{
\strong{Common Steps:}
\itemize{
\item The input \code{data} is assumed to be globally available.
\item Values for selected variables are recoded into three categories based on \code{categories_dat}.
\item Percentages for each category within each variable (and group, if \code{groups = TRUE}) are calculated.
}

\strong{If \code{groups = FALSE}:}
\enumerate{
\item Selects \code{vars} from \code{data}, renames them with \code{var_labels}.
\item Calculates percentages for the three categories for each variable.
\item Determines an order (\code{theorder}, global) for variables based on the percentage of the
third category (\code{categories_dat[3]}) in descending order.
\item Generates a single stacked bar chart using \code{highcharter} where:
\itemize{
\item X-axis shows variables (ordered by \code{theorder}).
\item Y-axis shows percentage (0-100\%).
\item Bars are stacked by the three categories.
\item Data labels show percentages if > 5\%.
\item Legend order is explicitly set for categories.
\item Caption shows N. Export options are enabled.
}
\item Returns the \code{highchart} object.
}

\strong{If \code{groups = TRUE}:}
\enumerate{
\item Creates a mapping \code{varlabdat} (variable names to labels).
\item Selects \code{vars} and \code{grpvar} from \code{data}. Renames \code{vars} using \code{thevarlabs} (which seems
to be a typo and should likely be \code{var_labels}). The grouping variable is named \code{thevar}.
\item Calculates percentages for the three categories for each variable, further grouped by \code{thevar}.
\item Uses the globally existing \code{theorder} (presumably set by a non-grouped call or another function).
\item For each variable in \code{theorder} (taken from levels of \code{key} after ordering):
\itemize{
\item Filters data for that specific variable.
\item Creates a stacked bar chart where:
\itemize{
\item X-axis shows levels of \code{grpvar} (\code{thevar}).
\item Y-axis shows percentage.
\item Bars stacked by categories.
\item Chart title is the variable label.
\item Similar styling (data labels, legend, caption, export) as the non-grouped version.
}
\item The legend order for categories is adjusted for each plot.
}
\item The list of generated \code{highchart} objects (\code{hc}) is then passed to
\code{generate_quarto_elements} to print them sequentially in a Quarto document.
}
}
\examples{
# Assumes 'data' is in the global environment.
# 'colors' and 'myMenuItems' are assumed to be globally defined for highcharter styling.
# General summary:
# viz_general(vars = c("q1", "q2"),
#             var_labels = c("Question 1", "Question 2"),
#             categories_dat = c("Agree", "Neutral", "Disagree"))

# Grouped summary:
# `theorder` should exist if a specific order is desired for grouped plots.
# data$age_category <- sample(c("Young", "Mid", "Old"), nrow(data), replace = TRUE)
# viz_general(vars = c("q1", "q2"),
#             var_labels = c("Question 1", "Question 2"),
#             categories_dat = c("Positive", "Neutral", "Negative"),
#             grpvar = "age_category",
#             groups = TRUE)

Dependencies: dplyr, tidyr, highcharter, forcats, purrr, sjmisc (implicitly if grpvar needs to_label)
              (Note: Assumes `data`, `colors`, `myMenuItems` are globally available.
              Uses global assignment `<<-` for `theorder` and within `generate_quarto_elements`.
              The `std.error` function is not directly used here but might be part of the environment.)
}
